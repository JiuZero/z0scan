name: Build and Release with Nuitka

on:
  workflow_dispatch:  # 手动触发
    inputs:
      version:
        description: 'Release version (e.g. v1.0.0)'
        required: true
        default: 'v1.0.0'
      is_prerelease:
        description: 'Is this a pre-release?'
        type: boolean
        required: false
        default: false

env:
  PYTHON_VERSION: "3.11"
  BUILD_SCRIPT: "build.py"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            artifact_suffix: linux-amd64
          - os: ubuntu-latest
            arch: arm64
            artifact_suffix: linux-arm64
            setup_arm: true
          - os: windows-latest
            arch: x86_64
            artifact_suffix: windows-amd64
          - os: macos-latest
            arch: arm64
            artifact_suffix: darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf gcc
        if: runner.os == 'Linux'
    
      - name: Install Nuitka and build tools
        run: |
          python -m pip install --upgrade pip
          pip install nuitka zstandard imageio
          pip install -r requirements.txt
    

      - name: Build with Nuitka
        env:
          TARGET_ARCH: ${{ matrix.arch }}
        run: |
          python ${{ env.BUILD_SCRIPT }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: z0scan-${{ matrix.artifact_suffix }}.zip
          path: |
            z0scan-*.zip
          if-no-files-found: error

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: |
            ### Platform Build Matrix
            | Platform  | Arch      | File                      |
            |-----------|-----------|---------------------------|
            | Linux     | x86_64    | `z0scan-linux-amd64.zip`      |
            | Linux     | ARM64     | `z0scan-linux-arm64.zip`      |
            | Windows   | x86_64    | `z0scan-windows-amd64.zip`    |
            | macOS     | ARM64     | `z0scan-darwin-arm64.zip`     |
          files: |
            z0scan-linux-amd64.zip
            z0scan-linux-arm64.zip
            z0scan-windows-amd64.zip
            z0scan-darwin-arm64.zip
          draft: false
          prerelease: ${{ github.event.inputs.is_prerelease }}
